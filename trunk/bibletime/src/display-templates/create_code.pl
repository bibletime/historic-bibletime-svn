#!/usr/bin/perl

use strict;
use File::Compare;
use File::Copy;

my $dir = $ARGV[0];

print "\nrunning create-code.pl to update built-in templates......\n";

my %names;

sub read_names() {
	my $dir = shift;
	open(IN, "< $dir/names.conf") || die "Cannot open $dir/names.conf";
	
	while (<IN>) {
		my $line = $_;
		chomp $line;
		
		my ($filename, $description) = split("\t", $line);
		$names{ $filename } = $description;
	}	
	
	close(IN);
}

sub extract_data {
	my $file = shift || die;
	
	my $name;
	my $html;
	
	$file =~ /(?:.+\/)?(.+\..+)/;
	my $tmpl_name = $1 || $file;
	$name = $names{ $tmpl_name };
	
	open(IN, "< $file");	
	while( <IN> ) {
		my $line = $_;
		chomp($line);
		$line =~ s/"/\\"/g;
		$line .= "\\n\\\n";
#		$line =~ s/\s{2,}|\t/ /g; #replace spaces and tabs by space
		$html .= $line;
	}
	close(INT);
	
	print "Found $name\n" if ($name);
	return ($name, $html);
}


&read_names($dir);
my $code = "";
foreach my $f (glob("$dir/*tmpl")) {
	my ($name, $html) = &extract_data( $f );
	$code .= "\tm_templateMap[ i18n(\"$name\") ] = \"$html\";\n" if $name;
}

open(OUT, "> template-init.cpp-new");
print OUT "//THIS CODE IS AUTOGENERATED BY CREATE_CODE.PL. DO NOT EDIT!

void CDisplayTemplateMgr::init() {
$code
}
";
close(OUT);

if (-e "template-init.cpp" && compare("template-init.cpp","template-init.cpp-new")) { #files differ, overwrite
	print "Files differ, updating............\n";
	move("template-init.cpp-new","template-init.cpp");
}
elsif (!-e "template-init.cpp") { #old file does not exist, move
	print "Creating file............\n";
	move ("template-init.cpp-new","template-init.cpp");
}
else { #files identical, skip
	print "Files are identical, skipping...........\n";
	unlink("template-init.cpp-new");
}

print "create-code.pl finished.\n\n";
